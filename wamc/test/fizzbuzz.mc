import Toybox.Lang;
import Toybox.System;
import Toybox.Test;

class Wamc_test_fizzbuzz {
    static function createModule() {
        var module_ = new Module(
            // WASM bytecode
            [0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x01, 0x12, 0x04, 0x60, 0x01, 0x7f, 0x00, 0x60, 0x02, 0x7f, 0x7f, 0x00, 0x60, 0x01, 0x7f, 0x01, 0x7f, 0x60, 0x00, 0x00, 0x02, 0x10, 0x01, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x07, 0x70, 0x75, 0x74, 0x63, 0x68, 0x61, 0x72, 0x00, 0x00, 0x03, 0x06, 0x05, 0x01, 0x02, 0x02, 0x00, 0x03, 0x05, 0x03, 0x01, 0x00, 0x01, 0x08, 0x01, 0x05, 0x0a, 0xe2, 0x01, 0x05, 0x23, 0x00, 0x03, 0x40, 0x20, 0x00, 0x2d, 0x00, 0x00, 0x10, 0x00, 0x20, 0x00, 0x41, 0x01, 0x6a, 0x21, 0x00, 0x20, 0x01, 0x41, 0x01, 0x6b, 0x22, 0x01, 0x41, 0x00, 0x4a, 0x0d, 0x00, 0x0b, 0x41, 0x0a, 0x10, 0x00, 0x0b, 0x12, 0x00, 0x20, 0x00, 0x41, 0x0a, 0x4f, 0x04, 0x40, 0x41, 0x3f, 0x0f, 0x0b, 0x20, 0x00, 0x41, 0x30, 0x6a, 0x0b, 0x53, 0x01, 0x02, 0x7f, 0x41, 0x80, 0x94, 0xeb, 0xdc, 0x03, 0x21, 0x02, 0x20, 0x00, 0x41, 0x00, 0x48, 0x04, 0x40, 0x41, 0x00, 0x41, 0x2d, 0x3a, 0x00, 0x00, 0x20, 0x00, 0x41, 0x7f, 0x6c, 0x21, 0x00, 0x41, 0x01, 0x21, 0x01, 0x0b, 0x03, 0x40, 0x20, 0x01, 0x20, 0x00, 0x20, 0x02, 0x6e, 0x10, 0x02, 0x3a, 0x00, 0x00, 0x20, 0x00, 0x20, 0x02, 0x70, 0x21, 0x00, 0x20, 0x02, 0x41, 0x0a, 0x6e, 0x21, 0x02, 0x20, 0x01, 0x41, 0x01, 0x6a, 0x21, 0x01, 0x20, 0x02, 0x41, 0x01, 0x4e, 0x0d, 0x00, 0x0b, 0x20, 0x01, 0x0b, 0x3a, 0x00, 0x20, 0x00, 0x41, 0x0f, 0x70, 0x45, 0x04, 0x40, 0x41, 0x2a, 0x41, 0x08, 0x10, 0x01, 0x0f, 0x0b, 0x20, 0x00, 0x41, 0x05, 0x70, 0x45, 0x04, 0x40, 0x41, 0x2e, 0x41, 0x04, 0x10, 0x01, 0x0f, 0x0b, 0x20, 0x00, 0x41, 0x03, 0x70, 0x45, 0x04, 0x40, 0x41, 0x2a, 0x41, 0x04, 0x10, 0x01, 0x0f, 0x0b, 0x41, 0x00, 0x20, 0x00, 0x10, 0x03, 0x10, 0x01, 0x0b, 0x1a, 0x01, 0x01, 0x7f, 0x03, 0x40, 0x20, 0x00, 0x10, 0x04, 0x20, 0x00, 0x41, 0x01, 0x6a, 0x21, 0x00, 0x20, 0x00, 0x41, 0xe4, 0x00, 0x48, 0x0d, 0x00, 0x0b, 0x0b, 0x0b, 0x21, 0x02, 0x00, 0x41, 0x00, 0x0b, 0x0e, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e, 0x00, 0x41, 0x2a, 0x0b, 0x08, 0x66, 0x69, 0x7a, 0x7a, 0x62, 0x75, 0x7a, 0x7a, 0x00, 0x76, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x01, 0x3a, 0x06, 0x00, 0x07, 0x70, 0x75, 0x74, 0x63, 0x68, 0x61, 0x72, 0x01, 0x04, 0x70, 0x75, 0x74, 0x73, 0x02, 0x0c, 0x64, 0x69, 0x67, 0x69, 0x74, 0x54, 0x6f, 0x41, 0x53, 0x43, 0x49, 0x49, 0x03, 0x0a, 0x69, 0x6e, 0x74, 0x54, 0x6f, 0x41, 0x53, 0x43, 0x49, 0x49, 0x04, 0x08, 0x66, 0x69, 0x7a, 0x7a, 0x62, 0x75, 0x7a, 0x7a, 0x05, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x02, 0x33, 0x06, 0x00, 0x01, 0x00, 0x00, 0x01, 0x02, 0x00, 0x03, 0x70, 0x74, 0x72, 0x01, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x02, 0x01, 0x00, 0x01, 0x69, 0x03, 0x03, 0x00, 0x01, 0x69, 0x01, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x02, 0x03, 0x64, 0x69, 0x76, 0x04, 0x01, 0x00, 0x01, 0x6e, 0x05, 0x01, 0x00, 0x01, 0x69]b,
            new Method($, :import_function), // hardcoded function for now
            // Memory
            new Memory(1, null),
            // Types
            [
                new Type(0, 96, [127], [], 32769),
                new Type(1, 96, [127, 127], [], 524305),
                new Type(2, 96, [127], [127], 33025),
                new Type(3, 96, [], [], 2048),
            ],
            // Functions
            [
                // Imported
                new FunctionImport(new Type(0, 96, [127], [], 32769), "host", "putchar"),
                // Internal
                new Function(new Type(1, 96, [127, 127], [], 524305), 1, [], 68, 101, 0, 101),
                new Function(new Type(2, 96, [127], [127], 33025), 2, [], 104, 120, 0, 120),
                new Function(new Type(2, 96, [127], [127], 33025), 3, [127, 127], 125, 204, 0, 204),
                new Function(new Type(0, 96, [127], [], 32769), 4, [], 207, 263, 0, 263),
                new Function(new Type(3, 96, [], [], 2048), 5, [127], 268, 290, 0, 290),
            ],
            // Tables
            {
                112 => [],
            },
            // Globals
            [
            ],
            // Exports
            [
            ],
            // Export map
            {
            },
            // Block map
            {
                68 => new Block(3, BLOCK_TYPE[64], 68, 96, 0, 70),
                109 => new Block(4, BLOCK_TYPE[64], 109, 114, 0, 114),
                138 => new Block(4, BLOCK_TYPE[64], 138, 158, 0, 158),
                159 => new Block(3, BLOCK_TYPE[64], 159, 201, 0, 161),
                213 => new Block(4, BLOCK_TYPE[64], 213, 222, 0, 222),
                229 => new Block(4, BLOCK_TYPE[64], 229, 238, 0, 238),
                245 => new Block(4, BLOCK_TYPE[64], 245, 254, 0, 254),
                268 => new Block(3, BLOCK_TYPE[64], 268, 289, 0, 270),
            }
        );

        // Data sections
        module_.memory.write(0, [0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4a, 0x4b, 0x4c, 0x4d, 0x4e]b);
        module_.memory.write(42, [0x66, 0x69, 0x7a, 0x7a, 0x62, 0x75, 0x7a, 0x7a]b);
        module_.start_function = 5;
        module_.dump();
        return module_;
    }
}
